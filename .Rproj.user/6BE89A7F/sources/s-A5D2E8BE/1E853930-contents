#install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
nfwy <- WholeYear

#FIRSTEXAMPLE AUTOM GRID

set.seed(998)

#create a 20% sample of the data
nfwy <- nfwy[sample(1:nrow(nfwy), 7000,replace=FALSE),]
# define an 75%/25% train/test split of the dataset
inTraining <- createDataPartition(nfwy$SolarRad, p = .75, list = FALSE)
training <- nfwy[inTraining,]
testing <- nfwy[-inTraining,]
#10 fold cross validation
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
#train Random Forest Regression model with a tuneLenght = 1 (trains with 1 mtry value for RandomForest)
rfFit1 <- train(SolarRad~., data = training, method = "rf", trControl=fitControl, tuneLength = 1)
#training results
rfFit1

#SECONDEXAMPLE AUTOM GRID
#caret model - Automatic Tuning Grid
#http://topepo.github.io/caret/bytag.html
#model training: http://topepo.github.io/caret/training.html
#model measurement: http://topepo.github.io/caret/other.html
#dataframe = WholeYear (nfwy)
#Y Value = SolarRad

set.seed(998)
#create a 20% sample of the data
nfwy <- nfwy[sample(1:nrow(nfwy), 7000,replace=FALSE),]
# define an 75%/25% train/test split of the dataset
inTraining2 <- createDataPartition(nfwy$SolarRad, p = .75, list = FALSE)
training2 <- nfwy[inTraining,]
testing2 <- nfwy[-inTraining,]
#10 fold cross validation
fitControl2 <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
#train Linear Regression model with a tuneLenght = 2 (trains with 2 mtry values for RandomForest)
rfFit2 <- train(SolarRad~., data = training, method = "rf", trControl=fitControl, tuneLength = 2)
#training results
rfFit2

#THIRDEXAMPLE MANUAL GRID
#caret model - Manual Tuning Grid
#http://topepo.github.io/caret/bytag.html
#model training: http://topepo.github.io/caret/training.html
#model measurement: http://topepo.github.io/caret/other.html
#dataframe = WholeYear
#Y Value = SolarRad

